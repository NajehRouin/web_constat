{
    "sourceFile": "src/pages/dashboard/fraud.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1749746392703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749746442526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,11 @@\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                     <td className=\"px-4 py-2 border-b font-semibold\">{(item.similarity * 100).toFixed(2)}%</td>\r\n                                     <td className=\"px-4 py-2 border-b\">\r\n                                         <button\r\n+onClick={()=>{\r\n+    console.log('item',item)\r\n+}}\r\n \r\n                                             className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                         >\r\n                                            <EyeIcon className=\"h-5 w-5\" />\r\n"
                },
                {
                    "date": 1749746451220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,20 +72,20 @@\n                                     <td className=\"px-4 py-2 border-b\">{item.userId?.name}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{item.userId?.prenom}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{item.nvConstat?.location}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.nvConstat?.date).toLocaleDateString()}</td>\r\n-                                 \r\n+\r\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                     <td className=\"px-4 py-2 border-b font-semibold\">{(item.similarity * 100).toFixed(2)}%</td>\r\n                                     <td className=\"px-4 py-2 border-b\">\r\n                                         <button\r\n-onClick={()=>{\r\n-    console.log('item',item)\r\n-}}\r\n+                                            onClick={() => {\r\n+                                                console.log('item', item)\r\n+                                            }}\r\n \r\n                                             className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                         >\r\n-                                           <EyeIcon className=\"h-5 w-5\" />\r\n+                                            <EyeIcon className=\"h-5 w-5\" />\r\n                                         </button>\r\n                                     </td>\r\n                                 </tr>\r\n                             ))}\r\n"
                },
                {
                    "date": 1749746858988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,12 +14,15 @@\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n     const fraudsPerPage = 5;\r\n \r\n+    // State for modal\r\n+    const [modalOpen, setModalOpen] = useState(false);\r\n+    const [selectedImages, setSelectedImages] = useState();\r\n+\r\n     useEffect(() => {\r\n         const fetchFrauds = async () => {\r\n             const res = await client.get(\"/fraud/fraud\");\r\n-\r\n             setFrauds(res.data?.result);\r\n         };\r\n         fetchFrauds();\r\n     }, []);\r\n@@ -32,8 +35,20 @@\n     const indexOfFirst = indexOfLast - fraudsPerPage;\r\n     const currentFrauds = filteredFrauds.slice(indexOfFirst, indexOfLast);\r\n     const totalPages = Math.ceil(filteredFrauds.length / fraudsPerPage);\r\n \r\n+    // Fonction pour ouvrir la modale\r\n+    const openModal = (images) => {\r\n+        setSelectedImages(images);\r\n+        setModalOpen(true);\r\n+    };\r\n+\r\n+    // Fonction pour fermer la modale\r\n+    const closeModal = () => {\r\n+        setModalOpen(false);\r\n+        setSelectedImages();\r\n+    };\r\n+\r\n     return (\r\n         <div className=\"mt-12 mb-8 flex flex-col gap-12\">\r\n             <Card>\r\n                 <CardHeader\r\n@@ -58,31 +73,27 @@\n                 <CardBody className=\"overflow-x-scroll px-0 pt-0 pb-2\">\r\n                     <table className=\"w-full min-w-[640px] table-auto border border-gray-200\">\r\n                         <thead>\r\n                             <tr className=\"bg-gray-100\">\r\n-                                {[\"Nom\", \"Prénom\", \"Lieu (Nouveau)\", \"Date (Nouveau)\", , \"Date\", \"Similarité\", \"Actions\"].map((header) => (\r\n+                                {[\"Nom\", \"Prénom\", \"Lieu (Nouveau)\", \"Date (Nouveau)\", \"Date\", \"Similarité\", \"Actions\"].map((header) => (\r\n                                     <th key={header} className=\"px-4 py-2 text-xs font-bold text-center uppercase text-blue-gray-500 border-b\">\r\n                                         {header}\r\n                                     </th>\r\n                                 ))}\r\n                             </tr>\r\n                         </thead>\r\n                         <tbody>\r\n-                            {frauds.map((item, index) => (\r\n+                            {currentFrauds.map((item, index) => (\r\n                                 <tr key={index} className=\"text-center text-sm\">\r\n                                     <td className=\"px-4 py-2 border-b\">{item.userId?.name}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{item.userId?.prenom}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{item.nvConstat?.location}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.nvConstat?.date).toLocaleDateString()}</td>\r\n-\r\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                     <td className=\"px-4 py-2 border-b font-semibold\">{(item.similarity * 100).toFixed(2)}%</td>\r\n                                     <td className=\"px-4 py-2 border-b\">\r\n                                         <button\r\n-                                            onClick={() => {\r\n-                                                console.log('item', item)\r\n-                                            }}\r\n-\r\n+                                            onClick={() => openModal(item?.imagesCompared)}\r\n                                             className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                         >\r\n                                             <EyeIcon className=\"h-5 w-5\" />\r\n                                         </button>\r\n@@ -113,9 +124,47 @@\n                         </button>\r\n                     </div>\r\n                 </CardBody>\r\n             </Card>\r\n+\r\n+            {/* Modal */}\r\n+            {modalOpen && (\r\n+                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n+                    <div className=\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n+                        <div className=\"flex justify-end\">\r\n+                            <button\r\n+                                onClick={closeModal}\r\n+                                className=\"text-gray-500 hover:text-gray-700\"\r\n+                            >\r\n+                                &times;\r\n+                            </button>\r\n+                        </div>\r\n+                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n+                            {selectedImages ?(\r\n+                               \r\n+                                    <img\r\n+                                      \r\n+                                        src={client.getBaseURL()+ selectedImages}\r\n+                                        alt={`Comparée ${i + 1}`}\r\n+                                        className=\"w-full h-auto object-cover rounded\"\r\n+                                    />\r\n+                              \r\n+                            ) : (\r\n+                                <p>Aucune image disponible</p>\r\n+                            )}\r\n+                        </div>\r\n+                        <div className=\"mt-4 text-right\">\r\n+                            <button\r\n+                                onClick={closeModal}\r\n+                                className=\"px-4 py-2 bg-gray-200 rounded text-sm\"\r\n+                            >\r\n+                                Fermer\r\n+                            </button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n     );\r\n }\r\n \r\n-export default Fraud;\r\n+export default Fraud;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749746911232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n } from \"@material-tailwind/react\";\r\n import { EyeIcon } from \"@heroicons/react/24/outline\";\r\n import { useEffect, useState } from \"react\";\r\n import client from \"../../api/client\";\r\n-import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\r\n \r\n+\r\n export function Fraud() {\r\n     const [frauds, setFrauds] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n"
                },
                {
                    "date": 1749746948610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,23 +6,20 @@\n } from \"@material-tailwind/react\";\r\n import { EyeIcon } from \"@heroicons/react/24/outline\";\r\n import { useEffect, useState } from \"react\";\r\n import client from \"../../api/client\";\r\n+import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\r\n \r\n-\r\n export function Fraud() {\r\n     const [frauds, setFrauds] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n     const fraudsPerPage = 5;\r\n \r\n-    // State for modal\r\n-    const [modalOpen, setModalOpen] = useState(false);\r\n-    const [selectedImages, setSelectedImages] = useState();\r\n-\r\n     useEffect(() => {\r\n         const fetchFrauds = async () => {\r\n             const res = await client.get(\"/fraud/fraud\");\r\n+\r\n             setFrauds(res.data?.result);\r\n         };\r\n         fetchFrauds();\r\n     }, []);\r\n@@ -35,20 +32,8 @@\n     const indexOfFirst = indexOfLast - fraudsPerPage;\r\n     const currentFrauds = filteredFrauds.slice(indexOfFirst, indexOfLast);\r\n     const totalPages = Math.ceil(filteredFrauds.length / fraudsPerPage);\r\n \r\n-    // Fonction pour ouvrir la modale\r\n-    const openModal = (images) => {\r\n-        setSelectedImages(images);\r\n-        setModalOpen(true);\r\n-    };\r\n-\r\n-    // Fonction pour fermer la modale\r\n-    const closeModal = () => {\r\n-        setModalOpen(false);\r\n-        setSelectedImages();\r\n-    };\r\n-\r\n     return (\r\n         <div className=\"mt-12 mb-8 flex flex-col gap-12\">\r\n             <Card>\r\n                 <CardHeader\r\n@@ -73,27 +58,31 @@\n                 <CardBody className=\"overflow-x-scroll px-0 pt-0 pb-2\">\r\n                     <table className=\"w-full min-w-[640px] table-auto border border-gray-200\">\r\n                         <thead>\r\n                             <tr className=\"bg-gray-100\">\r\n-                                {[\"Nom\", \"Prénom\", \"Lieu (Nouveau)\", \"Date (Nouveau)\", \"Date\", \"Similarité\", \"Actions\"].map((header) => (\r\n+                                {[\"Nom\", \"Prénom\", \"Lieu (Nouveau)\", \"Date (Nouveau)\", , \"Date\", \"Similarité\", \"Actions\"].map((header) => (\r\n                                     <th key={header} className=\"px-4 py-2 text-xs font-bold text-center uppercase text-blue-gray-500 border-b\">\r\n                                         {header}\r\n                                     </th>\r\n                                 ))}\r\n                             </tr>\r\n                         </thead>\r\n                         <tbody>\r\n-                            {currentFrauds.map((item, index) => (\r\n+                            {frauds.map((item, index) => (\r\n                                 <tr key={index} className=\"text-center text-sm\">\r\n                                     <td className=\"px-4 py-2 border-b\">{item.userId?.name}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{item.userId?.prenom}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{item.nvConstat?.location}</td>\r\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.nvConstat?.date).toLocaleDateString()}</td>\r\n+\r\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                     <td className=\"px-4 py-2 border-b font-semibold\">{(item.similarity * 100).toFixed(2)}%</td>\r\n                                     <td className=\"px-4 py-2 border-b\">\r\n                                         <button\r\n-                                            onClick={() => openModal(item?.imagesCompared)}\r\n+                                            onClick={() => {\r\n+                                                console.log('item', item)\r\n+                                            }}\r\n+\r\n                                             className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                         >\r\n                                             <EyeIcon className=\"h-5 w-5\" />\r\n                                         </button>\r\n@@ -124,47 +113,9 @@\n                         </button>\r\n                     </div>\r\n                 </CardBody>\r\n             </Card>\r\n-\r\n-            {/* Modal */}\r\n-            {modalOpen && (\r\n-                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n-                    <div className=\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n-                        <div className=\"flex justify-end\">\r\n-                            <button\r\n-                                onClick={closeModal}\r\n-                                className=\"text-gray-500 hover:text-gray-700\"\r\n-                            >\r\n-                                &times;\r\n-                            </button>\r\n-                        </div>\r\n-                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n-                            {selectedImages ?(\r\n-                               \r\n-                                    <img\r\n-                                      \r\n-                                        src={client.getBaseURL()+ selectedImages}\r\n-                                        alt={`Comparée ${i + 1}`}\r\n-                                        className=\"w-full h-auto object-cover rounded\"\r\n-                                    />\r\n-                              \r\n-                            ) : (\r\n-                                <p>Aucune image disponible</p>\r\n-                            )}\r\n-                        </div>\r\n-                        <div className=\"mt-4 text-right\">\r\n-                            <button\r\n-                                onClick={closeModal}\r\n-                                className=\"px-4 py-2 bg-gray-200 rounded text-sm\"\r\n-                            >\r\n-                                Fermer\r\n-                            </button>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n         </div>\r\n     );\r\n }\r\n \r\n-export default Fraud;\n\\ No newline at end of file\n+export default Fraud;\r\n"
                },
                {
                    "date": 1749747027276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,12 @@\n import client from \"../../api/client\";\r\n import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\r\n \r\n export function Fraud() {\r\n+ // State for modal\r\n+    const [modalOpen, setModalOpen] = useState(false);\r\n+    const [selectedImages, setSelectedImages] = useState(null);\r\n+\r\n     const [frauds, setFrauds] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n     const fraudsPerPage = 5;\r\n@@ -31,9 +35,19 @@\n     const indexOfLast = currentPage * fraudsPerPage;\r\n     const indexOfFirst = indexOfLast - fraudsPerPage;\r\n     const currentFrauds = filteredFrauds.slice(indexOfFirst, indexOfLast);\r\n     const totalPages = Math.ceil(filteredFrauds.length / fraudsPerPage);\r\n+ // Fonction pour ouvrir la modale\r\n+    const openModal = (images) => {\r\n+        setSelectedImages(images);\r\n+        setModalOpen(true);\r\n+    };\r\n \r\n+    // Fonction pour fermer la modale\r\n+    const closeModal = () => {\r\n+        setModalOpen(false);\r\n+        setSelectedImages([]);\r\n+    };\r\n     return (\r\n         <div className=\"mt-12 mb-8 flex flex-col gap-12\">\r\n             <Card>\r\n                 <CardHeader\r\n@@ -77,11 +91,9 @@\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                     <td className=\"px-4 py-2 border-b font-semibold\">{(item.similarity * 100).toFixed(2)}%</td>\r\n                                     <td className=\"px-4 py-2 border-b\">\r\n                                         <button\r\n-                                            onClick={() => {\r\n-                                                console.log('item', item)\r\n-                                            }}\r\n+                                           onClick={() => openModal(item?.imagesCompared)}\r\n \r\n                                             className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                         >\r\n                                             <EyeIcon className=\"h-5 w-5\" />\r\n"
                },
                {
                    "date": 1749747109908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,8 +125,47 @@\n                         </button>\r\n                     </div>\r\n                 </CardBody>\r\n             </Card>\r\n+\r\n+\r\n+                {/* Modal */}\r\n+            {modalOpen && (\r\n+                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n+                    <div className=\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n+                        <div className=\"flex justify-end\">\r\n+                            <button\r\n+                                onClick={closeModal}\r\n+                                className=\"text-gray-500 hover:text-gray-700\"\r\n+                            >\r\n+                                &times;\r\n+                            </button>\r\n+                        </div>\r\n+                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n+                            {selectedImages  ? (\r\n+                              \r\n+                                    <img\r\n+                                       \r\n+                                        src={client.getBaseURL()+ selectedImages}\r\n+                                        alt={`Comparée ${i + 1}`}\r\n+                                        className=\"w-full h-auto object-cover rounded\"\r\n+                                    />\r\n+                              \r\n+                            ) : (\r\n+                                <p>Aucune image disponible</p>\r\n+                            )}\r\n+                        </div>\r\n+                        <div className=\"mt-4 text-right\">\r\n+                            <button\r\n+                                onClick={closeModal}\r\n+                                className=\"px-4 py-2 bg-gray-200 rounded text-sm\"\r\n+                            >\r\n+                                Fermer\r\n+                            </button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1749747124300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,9 +144,9 @@\n                             {selectedImages  ? (\r\n                               \r\n                                     <img\r\n                                        \r\n-                                        src={client.getBaseURL()+ selectedImages}\r\n+                                        src={client.getBaseURL()+'/'+ selectedImages}\r\n                                         alt={`Comparée ${i + 1}`}\r\n                                         className=\"w-full h-auto object-cover rounded\"\r\n                                     />\r\n                               \r\n"
                },
                {
                    "date": 1749747149521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n                               \r\n                                     <img\r\n                                        \r\n                                         src={client.getBaseURL()+'/'+ selectedImages}\r\n-                                        alt={`Comparée ${i + 1}`}\r\n+                                        alt={`Comparée`}\r\n                                         className=\"w-full h-auto object-cover rounded\"\r\n                                     />\r\n                               \r\n                             ) : (\r\n"
                },
                {
                    "date": 1749747247892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,46 +127,48 @@\n                 </CardBody>\r\n             </Card>\r\n \r\n \r\n-                {/* Modal */}\r\n-            {modalOpen && (\r\n-                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n-                    <div className=\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n-                        <div className=\"flex justify-end\">\r\n-                            <button\r\n-                                onClick={closeModal}\r\n-                                className=\"text-gray-500 hover:text-gray-700\"\r\n-                            >\r\n-                                &times;\r\n-                            </button>\r\n-                        </div>\r\n-                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n-                            {selectedImages  ? (\r\n-                              \r\n-                                    <img\r\n-                                       \r\n-                                        src={client.getBaseURL()+'/'+ selectedImages}\r\n-                                        alt={`Comparée`}\r\n-                                        className=\"w-full h-auto object-cover rounded\"\r\n-                                    />\r\n-                              \r\n-                            ) : (\r\n-                                <p>Aucune image disponible</p>\r\n-                            )}\r\n-                        </div>\r\n-                        <div className=\"mt-4 text-right\">\r\n-                            <button\r\n-                                onClick={closeModal}\r\n-                                className=\"px-4 py-2 bg-gray-200 rounded text-sm\"\r\n-                            >\r\n-                                Fermer\r\n-                            </button>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n+          {/* Modal */}\r\n+{modalOpen && (\r\n+    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70\">\r\n+        <div className=\"bg-white rounded-lg p-6 w-[90vw] h-[80vh] max-w-5xl mx-auto my-auto flex flex-col items-center justify-center shadow-2xl\">\r\n+            {/* Close Button */}\r\n+            <div className=\"absolute top-4 right-4\">\r\n+                <button\r\n+                    onClick={closeModal}\r\n+                    className=\"text-gray-500 hover:text-gray-800 text-2xl font-bold\"\r\n+                >\r\n+                    &times;\r\n+                </button>\r\n+            </div>\r\n+\r\n+            {/* Image Container */}\r\n+            <div className=\"flex items-center justify-center h-full px-4\">\r\n+                {selectedImages ? (\r\n+                    <img\r\n+                        src={`${client.getBaseURL()}/${selectedImages}`}\r\n+                        alt=\"Comparée\"\r\n+                        className=\"max-h-full max-w-full object-contain rounded-lg shadow-md\"\r\n+                    />\r\n+                ) : (\r\n+                    <p className=\"text-gray-500\">Aucune image disponible</p>\r\n+                )}\r\n+            </div>\r\n+\r\n+            {/* Footer with close button (optionnel) */}\r\n+            <div className=\"mt-6\">\r\n+                <button\r\n+                    onClick={closeModal}\r\n+                    className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n+                >\r\n+                    Fermer\r\n+                </button>\r\n+            </div>\r\n         </div>\r\n+    </div>\r\n+)}\r\n+        </div>\r\n     );\r\n }\r\n \r\n export default Fraud;\r\n"
                },
                {
                    "date": 1749747253348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import client from \"../../api/client\";\r\n import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\r\n \r\n export function Fraud() {\r\n- // State for modal\r\n+    // State for modal\r\n     const [modalOpen, setModalOpen] = useState(false);\r\n     const [selectedImages, setSelectedImages] = useState(null);\r\n \r\n     const [frauds, setFrauds] = useState([]);\r\n@@ -35,9 +35,9 @@\n     const indexOfLast = currentPage * fraudsPerPage;\r\n     const indexOfFirst = indexOfLast - fraudsPerPage;\r\n     const currentFrauds = filteredFrauds.slice(indexOfFirst, indexOfLast);\r\n     const totalPages = Math.ceil(filteredFrauds.length / fraudsPerPage);\r\n- // Fonction pour ouvrir la modale\r\n+    // Fonction pour ouvrir la modale\r\n     const openModal = (images) => {\r\n         setSelectedImages(images);\r\n         setModalOpen(true);\r\n     };\r\n@@ -91,9 +91,9 @@\n                                     <td className=\"px-4 py-2 border-b\">{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                     <td className=\"px-4 py-2 border-b font-semibold\">{(item.similarity * 100).toFixed(2)}%</td>\r\n                                     <td className=\"px-4 py-2 border-b\">\r\n                                         <button\r\n-                                           onClick={() => openModal(item?.imagesCompared)}\r\n+                                            onClick={() => openModal(item?.imagesCompared)}\r\n \r\n                                             className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                         >\r\n                                             <EyeIcon className=\"h-5 w-5\" />\r\n@@ -127,48 +127,48 @@\n                 </CardBody>\r\n             </Card>\r\n \r\n \r\n-          {/* Modal */}\r\n-{modalOpen && (\r\n-    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70\">\r\n-        <div className=\"bg-white rounded-lg p-6 w-[90vw] h-[80vh] max-w-5xl mx-auto my-auto flex flex-col items-center justify-center shadow-2xl\">\r\n-            {/* Close Button */}\r\n-            <div className=\"absolute top-4 right-4\">\r\n-                <button\r\n-                    onClick={closeModal}\r\n-                    className=\"text-gray-500 hover:text-gray-800 text-2xl font-bold\"\r\n-                >\r\n-                    &times;\r\n-                </button>\r\n-            </div>\r\n+            {/* Modal */}\r\n+            {modalOpen && (\r\n+                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70\">\r\n+                    <div className=\"bg-white rounded-lg p-6 w-[90vw] h-[80vh] max-w-5xl mx-auto my-auto flex flex-col items-center justify-center shadow-2xl\">\r\n+                        {/* Close Button */}\r\n+                        <div className=\"absolute top-4 right-4\">\r\n+                            <button\r\n+                                onClick={closeModal}\r\n+                                className=\"text-gray-500 hover:text-gray-800 text-2xl font-bold\"\r\n+                            >\r\n+                                &times;\r\n+                            </button>\r\n+                        </div>\r\n \r\n-            {/* Image Container */}\r\n-            <div className=\"flex items-center justify-center h-full px-4\">\r\n-                {selectedImages ? (\r\n-                    <img\r\n-                        src={`${client.getBaseURL()}/${selectedImages}`}\r\n-                        alt=\"Comparée\"\r\n-                        className=\"max-h-full max-w-full object-contain rounded-lg shadow-md\"\r\n-                    />\r\n-                ) : (\r\n-                    <p className=\"text-gray-500\">Aucune image disponible</p>\r\n-                )}\r\n-            </div>\r\n+                        {/* Image Container */}\r\n+                        <div className=\"flex items-center justify-center h-full px-4\">\r\n+                            {selectedImages ? (\r\n+                                <img\r\n+                                    src={`${client.getBaseURL()}/${selectedImages}`}\r\n+                                    alt=\"Comparée\"\r\n+                                    className=\"max-h-full max-w-full object-contain rounded-lg shadow-md\"\r\n+                                />\r\n+                            ) : (\r\n+                                <p className=\"text-gray-500\">Aucune image disponible</p>\r\n+                            )}\r\n+                        </div>\r\n \r\n-            {/* Footer with close button (optionnel) */}\r\n-            <div className=\"mt-6\">\r\n-                <button\r\n-                    onClick={closeModal}\r\n-                    className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n-                >\r\n-                    Fermer\r\n-                </button>\r\n-            </div>\r\n+                        {/* Footer with close button (optionnel) */}\r\n+                        <div className=\"mt-6\">\r\n+                            <button\r\n+                                onClick={closeModal}\r\n+                                className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n+                            >\r\n+                                Fermer\r\n+                            </button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n-    </div>\r\n-)}\r\n-        </div>\r\n     );\r\n }\r\n \r\n export default Fraud;\r\n"
                },
                {
                    "date": 1749747366173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,47 +127,33 @@\n                 </CardBody>\r\n             </Card>\r\n \r\n \r\n-            {/* Modal */}\r\n-            {modalOpen && (\r\n-                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70\">\r\n-                    <div className=\"bg-white rounded-lg p-6 w-[90vw] h-[80vh] max-w-5xl mx-auto my-auto flex flex-col items-center justify-center shadow-2xl\">\r\n-                        {/* Close Button */}\r\n-                        <div className=\"absolute top-4 right-4\">\r\n-                            <button\r\n-                                onClick={closeModal}\r\n-                                className=\"text-gray-500 hover:text-gray-800 text-2xl font-bold\"\r\n-                            >\r\n-                                &times;\r\n-                            </button>\r\n-                        </div>\r\n+          {/* Modal */}\r\n+{modalOpen && (\r\n+  <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-90\">\r\n+    <div className=\"relative w-full h-full max-w-[95vw] max-h-[95vh] flex items-center justify-center\">\r\n+      {/* Close Button (top-right corner) */}\r\n+      <button\r\n+        onClick={closeModal}\r\n+        className=\"absolute top-2 right-2 z-10 text-white text-3xl font-bold bg-black bg-opacity-40 rounded-full w-10 h-10 flex items-center justify-center hover:bg-opacity-60 transition\"\r\n+      >\r\n+        &times;\r\n+      </button>\r\n \r\n-                        {/* Image Container */}\r\n-                        <div className=\"flex items-center justify-center h-full px-4\">\r\n-                            {selectedImages ? (\r\n-                                <img\r\n-                                    src={`${client.getBaseURL()}/${selectedImages}`}\r\n-                                    alt=\"Comparée\"\r\n-                                    className=\"max-h-full max-w-full object-contain rounded-lg shadow-md\"\r\n-                                />\r\n-                            ) : (\r\n-                                <p className=\"text-gray-500\">Aucune image disponible</p>\r\n-                            )}\r\n-                        </div>\r\n-\r\n-                        {/* Footer with close button (optionnel) */}\r\n-                        <div className=\"mt-6\">\r\n-                            <button\r\n-                                onClick={closeModal}\r\n-                                className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n-                            >\r\n-                                Fermer\r\n-                            </button>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n+      {/* Image */}\r\n+      {selectedImages ? (\r\n+        <img\r\n+          src={`${client.getBaseURL()}/${selectedImages}`}\r\n+          alt=\"Comparée\"\r\n+          className=\"max-w-full max-h-full object-contain\"\r\n+        />\r\n+      ) : (\r\n+        <p className=\"text-white text-lg\">Aucune image disponible</p>\r\n+      )}\r\n+    </div>\r\n+  </div>\r\n+)}\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1749747564221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n } from \"@material-tailwind/react\";\r\n import { EyeIcon } from \"@heroicons/react/24/outline\";\r\n import { useEffect, useState } from \"react\";\r\n import client from \"../../api/client\";\r\n-import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\r\n+import zoom from 'medium-zoom';\r\n \r\n export function Fraud() {\r\n     // State for modal\r\n     const [modalOpen, setModalOpen] = useState(false);\r\n@@ -127,33 +127,36 @@\n                 </CardBody>\r\n             </Card>\r\n \r\n \r\n-          {/* Modal */}\r\n-{modalOpen && (\r\n-  <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-90\">\r\n-    <div className=\"relative w-full h-full max-w-[95vw] max-h-[95vh] flex items-center justify-center\">\r\n-      {/* Close Button (top-right corner) */}\r\n-      <button\r\n-        onClick={closeModal}\r\n-        className=\"absolute top-2 right-2 z-10 text-white text-3xl font-bold bg-black bg-opacity-40 rounded-full w-10 h-10 flex items-center justify-center hover:bg-opacity-60 transition\"\r\n-      >\r\n-        &times;\r\n-      </button>\r\n+            {/* Modal */}\r\n+            {modalOpen && (\r\n+                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-90\">\r\n+                    <div className=\"relative w-full h-full max-w-[95vw] max-h-[95vh] flex items-center justify-center\">\r\n+                        {/* Close Button */}\r\n+                        <button\r\n+                            onClick={closeModal}\r\n+                            className=\"absolute top-2 right-2 z-10 text-white text-3xl font-bold bg-black bg-opacity-40 rounded-full w-10 h-10 flex items-center justify-center hover:bg-opacity-60 transition\"\r\n+                        >\r\n+                            &times;\r\n+                        </button>\r\n \r\n-      {/* Image */}\r\n-      {selectedImages ? (\r\n-        <img\r\n-          src={`${client.getBaseURL()}/${selectedImages}`}\r\n-          alt=\"Comparée\"\r\n-          className=\"max-w-full max-h-full object-contain\"\r\n-        />\r\n-      ) : (\r\n-        <p className=\"text-white text-lg\">Aucune image disponible</p>\r\n-      )}\r\n-    </div>\r\n-  </div>\r\n-)}\r\n+                        {/* Image with Zoom */}\r\n+                        {selectedImages ? (\r\n+                            <img\r\n+                                ref={(el) => {\r\n+                                    if (el) zoom(el);\r\n+                                }}\r\n+                                src={`${client.getBaseURL()}/${selectedImages}`}\r\n+                                alt=\"Comparée\"\r\n+                                className=\"max-w-full max-h-full object-contain cursor-zoom-in\"\r\n+                            />\r\n+                        ) : (\r\n+                            <p className=\"text-white text-lg\">Aucune image disponible</p>\r\n+                        )}\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1749747655468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,18 @@\n     const [frauds, setFrauds] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n     const fraudsPerPage = 5;\r\n-\r\n+useEffect(() => {\r\n+  const img = document.getElementById('zoomable-image');\r\n+  if (img) {\r\n+    zoom(img, {\r\n+      margin: 24,\r\n+      background: '#000000cc',\r\n+      scrollOffset: 0,\r\n+    });\r\n+  }\r\n+}, [selectedImages]);\r\n     useEffect(() => {\r\n         const fetchFrauds = async () => {\r\n             const res = await client.get(\"/fraud/fraud\");\r\n \r\n@@ -148,8 +157,9 @@\n                                 }}\r\n                                 src={`${client.getBaseURL()}/${selectedImages}`}\r\n                                 alt=\"Comparée\"\r\n                                 className=\"max-w-full max-h-full object-contain cursor-zoom-in\"\r\n+                                  id=\"zoomable-image\"\r\n                             />\r\n                         ) : (\r\n                             <p className=\"text-white text-lg\">Aucune image disponible</p>\r\n                         )}\r\n"
                },
                {
                    "date": 1749747683065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,18 +17,9 @@\n     const [frauds, setFrauds] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n     const fraudsPerPage = 5;\r\n-useEffect(() => {\r\n-  const img = document.getElementById('zoomable-image');\r\n-  if (img) {\r\n-    zoom(img, {\r\n-      margin: 24,\r\n-      background: '#000000cc',\r\n-      scrollOffset: 0,\r\n-    });\r\n-  }\r\n-}, [selectedImages]);\r\n+\r\n     useEffect(() => {\r\n         const fetchFrauds = async () => {\r\n             const res = await client.get(\"/fraud/fraud\");\r\n \r\n@@ -157,9 +148,8 @@\n                                 }}\r\n                                 src={`${client.getBaseURL()}/${selectedImages}`}\r\n                                 alt=\"Comparée\"\r\n                                 className=\"max-w-full max-h-full object-contain cursor-zoom-in\"\r\n-                                  id=\"zoomable-image\"\r\n                             />\r\n                         ) : (\r\n                             <p className=\"text-white text-lg\">Aucune image disponible</p>\r\n                         )}\r\n"
                }
            ],
            "date": 1749746392703,
            "name": "Commit-0",
            "content": "import {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Typography,\r\n} from \"@material-tailwind/react\";\r\nimport { EyeIcon } from \"@heroicons/react/24/outline\";\r\nimport { useEffect, useState } from \"react\";\r\nimport client from \"../../api/client\";\r\nimport { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\r\n\r\nexport function Fraud() {\r\n    const [frauds, setFrauds] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const fraudsPerPage = 5;\r\n\r\n    useEffect(() => {\r\n        const fetchFrauds = async () => {\r\n            const res = await client.get(\"/fraud/fraud\");\r\n\r\n            setFrauds(res.data?.result);\r\n        };\r\n        fetchFrauds();\r\n    }, []);\r\n\r\n    const filteredFrauds = frauds?.filter((fraud) =>\r\n        fraud.cin?.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    const indexOfLast = currentPage * fraudsPerPage;\r\n    const indexOfFirst = indexOfLast - fraudsPerPage;\r\n    const currentFrauds = filteredFrauds.slice(indexOfFirst, indexOfLast);\r\n    const totalPages = Math.ceil(filteredFrauds.length / fraudsPerPage);\r\n\r\n    return (\r\n        <div className=\"mt-12 mb-8 flex flex-col gap-12\">\r\n            <Card>\r\n                <CardHeader\r\n                    variant=\"gradient\"\r\n                    color=\"gray\"\r\n                    className=\"mb-8 p-6 flex flex-col md:flex-row md:items-center md:justify-between gap-4\"\r\n                >\r\n                    <Typography variant=\"h6\" color=\"white\">\r\n                        Liste des fraudes\r\n                    </Typography>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Rechercher par CIN...\"\r\n                        className=\"px-3 py-2 rounded-md text-sm text-gray-800\"\r\n                        onChange={(e) => {\r\n                            setSearch(e.target.value);\r\n                            setCurrentPage(1);\r\n                        }}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody className=\"overflow-x-scroll px-0 pt-0 pb-2\">\r\n                    <table className=\"w-full min-w-[640px] table-auto border border-gray-200\">\r\n                        <thead>\r\n                            <tr className=\"bg-gray-100\">\r\n                                {[\"Nom\", \"Prénom\", \"Lieu (Nouveau)\", \"Date (Nouveau)\", , \"Date\", \"Similarité\", \"Actions\"].map((header) => (\r\n                                    <th key={header} className=\"px-4 py-2 text-xs font-bold text-center uppercase text-blue-gray-500 border-b\">\r\n                                        {header}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {frauds.map((item, index) => (\r\n                                <tr key={index} className=\"text-center text-sm\">\r\n                                    <td className=\"px-4 py-2 border-b\">{item.userId?.name}</td>\r\n                                    <td className=\"px-4 py-2 border-b\">{item.userId?.prenom}</td>\r\n                                    <td className=\"px-4 py-2 border-b\">{item.nvConstat?.location}</td>\r\n                                    <td className=\"px-4 py-2 border-b\">{new Date(item.nvConstat?.date).toLocaleDateString()}</td>\r\n                                 \r\n                                    <td className=\"px-4 py-2 border-b\">{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                    <td className=\"px-4 py-2 border-b font-semibold\">{(item.similarity * 100).toFixed(2)}%</td>\r\n                                    <td className=\"px-4 py-2 border-b\">\r\n                                        <button\r\n\r\n                                            className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                        >\r\n                                           <EyeIcon className=\"h-5 w-5\" />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    {/* Pagination */}\r\n                    <div className=\"flex justify-center items-center mt-6 gap-2\">\r\n                        <button\r\n                            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                            disabled={currentPage === 1}\r\n                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n                        >\r\n                            Précédent\r\n                        </button>\r\n                        <span className=\"text-sm font-medium\">\r\n                            Page {currentPage} / {totalPages}\r\n                        </span>\r\n                        <button\r\n                            onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n                            disabled={currentPage === totalPages}\r\n                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n                        >\r\n                            Suivant\r\n                        </button>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Fraud;\r\n"
        }
    ]
}
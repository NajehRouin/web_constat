{
    "sourceFile": "src/pages/dashboard/gestionnaire.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1748449622872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748450046692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,138 @@\n-import React from 'react'\r\n+import {\r\n+    Card,\r\n+    CardHeader,\r\n+    CardBody,\r\n+    Typography,\r\n+} from \"@material-tailwind/react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import client from \"../../api/client\";\r\n+import AddExpertModal from \"../../components/AddExpertModal\";\r\n \r\n function Gestionnaire() {\r\n-  return (\r\n-    <div>gestionnaire</div>\r\n-  )\r\n+     const [gestionnaires, setGestionnaires] = useState([]);\r\n+    const [search, setSearch] = useState(\"\");\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const gestionnairePerPage = 5;\r\n+const [openModal, setOpenModal] = useState(false);\r\n+\r\n+\r\n+   const fetchGestionnaires = async () => {\r\n+            const res = await client.get(\"/admin/getGestionnaire\"); \r\n+            setGestionnaires(res.data.result); \r\n+        };\r\n+    useEffect(() => {\r\n+     \r\n+        fetchGestionnaires();\r\n+    }, []);\r\n+\r\n+    const filteredGestionnaires = gestionnaires.filter((gest) =>\r\n+        gest.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    const indexOfLast = currentPage * gestionnairePerPage;\r\n+    const indexOfFirst = indexOfLast - gestionnairePerPage;\r\n+    const currentGestionnaires = filteredGestionnaires.slice(indexOfFirst, indexOfLast);\r\n+    const totalPages = Math.ceil(filteredGestionnaires.length / gestionnairePerPage);\r\n+\r\n+    return (\r\n+        <div className=\"mt-12 mb-8 flex flex-col gap-12\">\r\n+            <Card>\r\n+          <CardHeader\r\n+    variant=\"gradient\"\r\n+    color=\"gray\"\r\n+    className=\"mb-8 p-6 flex flex-col md:flex-row md:items-center md:justify-between gap-4\"\r\n+>\r\n+    <Typography variant=\"h6\" color=\"white\">\r\n+        Liste des Gestionnaires\r\n+    </Typography>\r\n+    <div className=\"flex flex-col md:flex-row items-center gap-4 w-full md:w-auto\">\r\n+        <input\r\n+            type=\"text\"\r\n+            placeholder=\"Rechercher par nom...\"\r\n+            className=\"px-3 py-2 rounded-md text-sm text-gray-800 w-full md:w-64\"\r\n+            onChange={(e) => {\r\n+                setSearch(e.target.value);\r\n+                setCurrentPage(1);\r\n+            }}\r\n+        />\r\n+        <button\r\n+            className=\"bg-blue-500 hover:bg-blue-600 text-white text-sm px-4 py-2 rounded-md\"\r\n+         onClick={() => setOpenModal(true)}\r\n+        >\r\n+            Ajouter Gestionnaire\r\n+        </button>\r\n+    </div>\r\n+</CardHeader>\r\n+\r\n+\r\n+                <CardBody className=\"overflow-x-scroll px-0 pt-0 pb-2\">\r\n+                    <table className=\"w-full min-w-[640px] table-auto\">\r\n+                        <thead>\r\n+                            <tr>\r\n+                                {[\"Nom\", \"Email\", \"Rôle\", \"Statut\", \"Créé le\"].map((el) => (\r\n+                                    <th key={el} className=\"border-b border-blue-gray-50 py-3 px-5 text-center\">\r\n+                                        <Typography\r\n+                                            variant=\"small\"\r\n+                                            className=\"text-[11px] font-bold uppercase text-blue-gray-400\"\r\n+                                        >\r\n+                                            {el}\r\n+                                        </Typography>\r\n+                                    </th>\r\n+                                ))}\r\n+                            </tr>\r\n+                        </thead>\r\n+                        <tbody>\r\n+                            {currentGestionnaires.map(({ _id, name, email, role, isActive, createdAt }) => {\r\n+                                const className = `py-3 px-5 border-b border-blue-gray-50 text-center`;\r\n+                                return (\r\n+                                    <tr key={_id}>\r\n+                                        <td className={className}>{name}</td>\r\n+                                        <td className={className}>{email}</td>\r\n+                                        <td className={className}>{role}</td>\r\n+                                        <td className={className}>\r\n+                                            <span className={`px-2 py-1 rounded text-xs font-semibold ${isActive ? \"bg-green-200 text-green-700\" : \"bg-red-200 text-red-700\"}`}>\r\n+                                                {isActive ? \"Actif\" : \"Inactif\"}\r\n+                                            </span>\r\n+                                        </td>\r\n+                                        <td className={className}>{new Date(createdAt).toLocaleDateString()}</td>\r\n+                                    </tr>\r\n+                                );\r\n+                            })}\r\n+                        </tbody>\r\n+                    </table>\r\n+\r\n+                    {/* Pagination */}\r\n+                    <div className=\"flex justify-center items-center mt-6 gap-2\">\r\n+                        <button\r\n+                            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n+                            disabled={currentPage === 1}\r\n+                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n+                        >\r\n+                            Précédent\r\n+                        </button>\r\n+                        <span className=\"text-sm font-medium\">\r\n+                            Page {currentPage} / {totalPages}\r\n+                        </span>\r\n+                        <button\r\n+                            onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n+                            disabled={currentPage === totalPages}\r\n+                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n+                        >\r\n+                            Suivant\r\n+                        </button>\r\n+                    </div>\r\n+                </CardBody>\r\n+            </Card>\r\n+\r\n+            <AddExpertModal\r\n+    open={openModal}\r\n+     handleClose={() => setOpenModal(false)}\r\n+    onExpertAdded={fetchGestionnaires}\r\n+/>\r\n+        </div>\r\n+    );\r\n }\r\n \r\n+\r\n+\r\n export default Gestionnaire\n\\ No newline at end of file\n"
                },
                {
                    "date": 1748450359406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n } from \"@material-tailwind/react\";\r\n import { useEffect, useState } from \"react\";\r\n import client from \"../../api/client\";\r\n import AddExpertModal from \"../../components/AddExpertModal\";\r\n+import AjouterGestionnaire from \"@/components/AjouterGestionnaire\";\r\n \r\n function Gestionnaire() {\r\n      const [gestionnaires, setGestionnaires] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n@@ -123,12 +124,12 @@\n                     </div>\r\n                 </CardBody>\r\n             </Card>\r\n \r\n-            <AddExpertModal\r\n+            <AjouterGestionnaire\r\n     open={openModal}\r\n      handleClose={() => setOpenModal(false)}\r\n-    onExpertAdded={fetchGestionnaires}\r\n+    onGestionnairedded={fetchGestionnaires}\r\n />\r\n         </div>\r\n     );\r\n }\r\n"
                }
            ],
            "date": 1748449622872,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nfunction Gestionnaire() {\r\n  return (\r\n    <div>gestionnaire</div>\r\n  )\r\n}\r\n\r\nexport default Gestionnaire"
        }
    ]
}
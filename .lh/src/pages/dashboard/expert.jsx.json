{
    "sourceFile": "src/pages/dashboard/expert.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1748450177196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749325881862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,16 @@\n } from \"@material-tailwind/react\";\r\n import { useEffect, useState } from \"react\";\r\n import client from \"../../api/client\";\r\n import AddExpertModal from \"../../components/AddExpertModal\";\r\n+import ModifierRole from \"@/components/ModifierRole\";\r\n \r\n-\r\n export function Expert() {\r\n     const [experts, setExperts] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n+    const [selectedGestionnaire, setSelectedGestionnaire] = useState(null);\r\n+    const [openModifierModal, setOpenModifierModal] = useState(false);\r\n     const expertsPerPage = 5;\r\n const [openModal, setOpenModal] = useState(false);\r\n \r\n \r\n@@ -29,8 +31,13 @@\n     const filteredExperts = experts.filter((expert) =>\r\n         expert.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n+      const handleOpenModifierModal = (gestionnaire) => {\r\n+        setSelectedGestionnaire(gestionnaire);\r\n+        setOpenModifierModal(true);\r\n+    };\r\n+\r\n     const indexOfLast = currentPage * expertsPerPage;\r\n     const indexOfFirst = indexOfLast - expertsPerPage;\r\n     const currentExperts = filteredExperts.slice(indexOfFirst, indexOfLast);\r\n     const totalPages = Math.ceil(filteredExperts.length / expertsPerPage);\r\n@@ -95,8 +102,17 @@\n                                                 {isActive ? \"Actif\" : \"Inactif\"}\r\n                                             </span>\r\n                                         </td>\r\n                                         <td className={className}>{new Date(createdAt).toLocaleDateString()}</td>\r\n+                                           <td className={className}>\r\n+                                            <button\r\n+                                                onClick={() => handleOpenModifierModal({ _id, name, email, role, isActive })}\r\n+                                                className=\"flex items-center gap-1 bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n+                                            >\r\n+                                                <PencilIcon className=\"h-4 w-4\" />\r\n+                                                Modifier\r\n+                                            </button>\r\n+                                        </td>\r\n                                     </tr>\r\n                                 );\r\n                             })}\r\n                         </tbody>\r\n@@ -129,8 +145,18 @@\n     open={openModal}\r\n      handleClose={() => setOpenModal(false)}\r\n     onExpertAdded={fetchExperts}\r\n />\r\n+\r\n+       <ModifierRole\r\n+                open={openModifierModal}\r\n+                handleClose={() => {\r\n+                    setOpenModifierModal(false);\r\n+                    setSelectedGestionnaire(null);\r\n+                }}\r\n+                gestionnaire={selectedGestionnaire}\r\n+                onGestionnaireUpdated={fetchGestionnaires}\r\n+            />\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1749325902297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n                     setOpenModifierModal(false);\r\n                     setSelectedGestionnaire(null);\r\n                 }}\r\n                 gestionnaire={selectedGestionnaire}\r\n-                onGestionnaireUpdated={fetchGestionnaires}\r\n+                onGestionnaireUpdated={fetchExperts}\r\n             />\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1749325939895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { useEffect, useState } from \"react\";\r\n import client from \"../../api/client\";\r\n import AddExpertModal from \"../../components/AddExpertModal\";\r\n import ModifierRole from \"@/components/ModifierRole\";\r\n-\r\n+import { PencilIcon } from \"@heroicons/react/24/outline\";\r\n export function Expert() {\r\n     const [experts, setExperts] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n"
                },
                {
                    "date": 1749326517020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n                                         <td className={className}>{new Date(createdAt).toLocaleDateString()}</td>\r\n                                            <td className={className}>\r\n                                             <button\r\n                                                 onClick={() => handleOpenModifierModal({ _id, name, email, role, isActive })}\r\n-                                                className=\"flex items-center gap-1 bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n+                                                className=\"flex items-center gap-1  bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n                                             >\r\n                                                 <PencilIcon className=\"h-4 w-4\" />\r\n                                                 Modifier\r\n                                             </button>\r\n"
                },
                {
                    "date": 1749328028011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,20 @@\n import { useEffect, useState } from \"react\";\r\n import client from \"../../api/client\";\r\n import AddExpertModal from \"../../components/AddExpertModal\";\r\n import ModifierRole from \"@/components/ModifierRole\";\r\n-import { PencilIcon } from \"@heroicons/react/24/outline\";\r\n+import { PencilIcon ,TrashIcon} from \"@heroicons/react/24/outline\";\r\n+\r\n+import { ToastContainer } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import SupprimerRole from \"@/components/SupprimerRole\";\r\n export function Expert() {\r\n     const [experts, setExperts] = useState([]);\r\n     const [search, setSearch] = useState(\"\");\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n     const [selectedGestionnaire, setSelectedGestionnaire] = useState(null);\r\n     const [openModifierModal, setOpenModifierModal] = useState(false);\r\n+      const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n     const expertsPerPage = 5;\r\n const [openModal, setOpenModal] = useState(false);\r\n \r\n \r\n@@ -36,8 +41,13 @@\n         setSelectedGestionnaire(gestionnaire);\r\n         setOpenModifierModal(true);\r\n     };\r\n \r\n+       const handleOpenDeleteModal = (gestionnaire) => {\r\n+        setSelectedGestionnaire(gestionnaire);\r\n+        setOpenDeleteModal(true);\r\n+    };\r\n+\r\n     const indexOfLast = currentPage * expertsPerPage;\r\n     const indexOfFirst = indexOfLast - expertsPerPage;\r\n     const currentExperts = filteredExperts.slice(indexOfFirst, indexOfLast);\r\n     const totalPages = Math.ceil(filteredExperts.length / expertsPerPage);\r\n@@ -102,16 +112,25 @@\n                                                 {isActive ? \"Actif\" : \"Inactif\"}\r\n                                             </span>\r\n                                         </td>\r\n                                         <td className={className}>{new Date(createdAt).toLocaleDateString()}</td>\r\n-                                           <td className={className}>\r\n-                                            <button\r\n-                                                onClick={() => handleOpenModifierModal({ _id, name, email, role, isActive })}\r\n-                                                className=\"flex items-center gap-1  bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n-                                            >\r\n-                                                <PencilIcon className=\"h-4 w-4\" />\r\n-                                                Modifier\r\n-                                            </button>\r\n+                                               <td className={className}>\r\n+                                            <div className=\"flex gap-2 justify-center\">\r\n+                                                <button\r\n+                                                    onClick={() => handleOpenModifierModal({ _id, name, email, role, isActive })}\r\n+                                                    className=\"flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n+                                                >\r\n+                                                    <PencilIcon className=\"h-4 w-4\" />\r\n+                                                    Modifier\r\n+                                                </button>\r\n+                                                <button\r\n+                                                    onClick={() => handleOpenDeleteModal({ _id, name })}\r\n+                                                    className=\"flex items-center gap-1 bg-red-500 hover:bg-red-600 text-white text-xs font-medium px-3 py-1.5 rounded-lg shadow-sm transition\"\r\n+                                                >\r\n+                                                    <TrashIcon className=\"h-4 w-4\" />\r\n+                                                    Supprimer\r\n+                                                </button>\r\n+                                            </div>\r\n                                         </td>\r\n                                     </tr>\r\n                                 );\r\n                             })}\r\n@@ -155,8 +174,18 @@\n                 }}\r\n                 gestionnaire={selectedGestionnaire}\r\n                 onGestionnaireUpdated={fetchExperts}\r\n             />\r\n+\r\n+              <SupprimerRole\r\n+                open={openDeleteModal}\r\n+                handleClose={() => {\r\n+                    setOpenDeleteModal(false);\r\n+                    setSelectedGestionnaire(null);\r\n+                }}\r\n+                gestionnaire={selectedGestionnaire}\r\n+                onGestionnaireDeleted={fetchExperts}\r\n+            />\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                }
            ],
            "date": 1748450177196,
            "name": "Commit-0",
            "content": "import {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Typography,\r\n} from \"@material-tailwind/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport client from \"../../api/client\";\r\nimport AddExpertModal from \"../../components/AddExpertModal\";\r\n\r\n\r\nexport function Expert() {\r\n    const [experts, setExperts] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const expertsPerPage = 5;\r\nconst [openModal, setOpenModal] = useState(false);\r\n\r\n\r\n   const fetchExperts = async () => {\r\n            const res = await client.get(\"/admin/getExpert\"); \r\n            setExperts(res.data.result); \r\n        };\r\n    useEffect(() => {\r\n     \r\n        fetchExperts();\r\n    }, []);\r\n\r\n    const filteredExperts = experts.filter((expert) =>\r\n        expert.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    const indexOfLast = currentPage * expertsPerPage;\r\n    const indexOfFirst = indexOfLast - expertsPerPage;\r\n    const currentExperts = filteredExperts.slice(indexOfFirst, indexOfLast);\r\n    const totalPages = Math.ceil(filteredExperts.length / expertsPerPage);\r\n\r\n    return (\r\n        <div className=\"mt-12 mb-8 flex flex-col gap-12\">\r\n            <Card>\r\n          <CardHeader\r\n    variant=\"gradient\"\r\n    color=\"gray\"\r\n    className=\"mb-8 p-6 flex flex-col md:flex-row md:items-center md:justify-between gap-4\"\r\n>\r\n    <Typography variant=\"h6\" color=\"white\">\r\n        Liste des experts\r\n    </Typography>\r\n    <div className=\"flex flex-col md:flex-row items-center gap-4 w-full md:w-auto\">\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Rechercher par nom...\"\r\n            className=\"px-3 py-2 rounded-md text-sm text-gray-800 w-full md:w-64\"\r\n            onChange={(e) => {\r\n                setSearch(e.target.value);\r\n                setCurrentPage(1);\r\n            }}\r\n        />\r\n        <button\r\n            className=\"bg-blue-500 hover:bg-blue-600 text-white text-sm px-4 py-2 rounded-md\"\r\n         onClick={() => setOpenModal(true)}\r\n        >\r\n            Ajouter Expert\r\n        </button>\r\n    </div>\r\n</CardHeader>\r\n\r\n\r\n                <CardBody className=\"overflow-x-scroll px-0 pt-0 pb-2\">\r\n                    <table className=\"w-full min-w-[640px] table-auto\">\r\n                        <thead>\r\n                            <tr>\r\n                                {[\"Nom\", \"Email\", \"Rôle\", \"Statut\", \"Créé le\"].map((el) => (\r\n                                    <th key={el} className=\"border-b border-blue-gray-50 py-3 px-5 text-center\">\r\n                                        <Typography\r\n                                            variant=\"small\"\r\n                                            className=\"text-[11px] font-bold uppercase text-blue-gray-400\"\r\n                                        >\r\n                                            {el}\r\n                                        </Typography>\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentExperts.map(({ _id, name, email, role, isActive, createdAt }) => {\r\n                                const className = `py-3 px-5 border-b border-blue-gray-50 text-center`;\r\n                                return (\r\n                                    <tr key={_id}>\r\n                                        <td className={className}>{name}</td>\r\n                                        <td className={className}>{email}</td>\r\n                                        <td className={className}>{role}</td>\r\n                                        <td className={className}>\r\n                                            <span className={`px-2 py-1 rounded text-xs font-semibold ${isActive ? \"bg-green-200 text-green-700\" : \"bg-red-200 text-red-700\"}`}>\r\n                                                {isActive ? \"Actif\" : \"Inactif\"}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className={className}>{new Date(createdAt).toLocaleDateString()}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    {/* Pagination */}\r\n                    <div className=\"flex justify-center items-center mt-6 gap-2\">\r\n                        <button\r\n                            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                            disabled={currentPage === 1}\r\n                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n                        >\r\n                            Précédent\r\n                        </button>\r\n                        <span className=\"text-sm font-medium\">\r\n                            Page {currentPage} / {totalPages}\r\n                        </span>\r\n                        <button\r\n                            onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n                            disabled={currentPage === totalPages}\r\n                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n                        >\r\n                            Suivant\r\n                        </button>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <AddExpertModal\r\n    open={openModal}\r\n     handleClose={() => setOpenModal(false)}\r\n    onExpertAdded={fetchExperts}\r\n/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expert;\r\n"
        }
    ]
}
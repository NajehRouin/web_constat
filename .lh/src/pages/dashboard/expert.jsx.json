{
    "sourceFile": "src/pages/dashboard/expert.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748450177196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748450177196,
            "name": "Commit-0",
            "content": "import {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Typography,\r\n} from \"@material-tailwind/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport client from \"../../api/client\";\r\nimport AddExpertModal from \"../../components/AddExpertModal\";\r\n\r\n\r\nexport function Expert() {\r\n    const [experts, setExperts] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const expertsPerPage = 5;\r\nconst [openModal, setOpenModal] = useState(false);\r\n\r\n\r\n   const fetchExperts = async () => {\r\n            const res = await client.get(\"/admin/getExpert\"); \r\n            setExperts(res.data.result); \r\n        };\r\n    useEffect(() => {\r\n     \r\n        fetchExperts();\r\n    }, []);\r\n\r\n    const filteredExperts = experts.filter((expert) =>\r\n        expert.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    const indexOfLast = currentPage * expertsPerPage;\r\n    const indexOfFirst = indexOfLast - expertsPerPage;\r\n    const currentExperts = filteredExperts.slice(indexOfFirst, indexOfLast);\r\n    const totalPages = Math.ceil(filteredExperts.length / expertsPerPage);\r\n\r\n    return (\r\n        <div className=\"mt-12 mb-8 flex flex-col gap-12\">\r\n            <Card>\r\n          <CardHeader\r\n    variant=\"gradient\"\r\n    color=\"gray\"\r\n    className=\"mb-8 p-6 flex flex-col md:flex-row md:items-center md:justify-between gap-4\"\r\n>\r\n    <Typography variant=\"h6\" color=\"white\">\r\n        Liste des experts\r\n    </Typography>\r\n    <div className=\"flex flex-col md:flex-row items-center gap-4 w-full md:w-auto\">\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Rechercher par nom...\"\r\n            className=\"px-3 py-2 rounded-md text-sm text-gray-800 w-full md:w-64\"\r\n            onChange={(e) => {\r\n                setSearch(e.target.value);\r\n                setCurrentPage(1);\r\n            }}\r\n        />\r\n        <button\r\n            className=\"bg-blue-500 hover:bg-blue-600 text-white text-sm px-4 py-2 rounded-md\"\r\n         onClick={() => setOpenModal(true)}\r\n        >\r\n            Ajouter Expert\r\n        </button>\r\n    </div>\r\n</CardHeader>\r\n\r\n\r\n                <CardBody className=\"overflow-x-scroll px-0 pt-0 pb-2\">\r\n                    <table className=\"w-full min-w-[640px] table-auto\">\r\n                        <thead>\r\n                            <tr>\r\n                                {[\"Nom\", \"Email\", \"Rôle\", \"Statut\", \"Créé le\"].map((el) => (\r\n                                    <th key={el} className=\"border-b border-blue-gray-50 py-3 px-5 text-center\">\r\n                                        <Typography\r\n                                            variant=\"small\"\r\n                                            className=\"text-[11px] font-bold uppercase text-blue-gray-400\"\r\n                                        >\r\n                                            {el}\r\n                                        </Typography>\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentExperts.map(({ _id, name, email, role, isActive, createdAt }) => {\r\n                                const className = `py-3 px-5 border-b border-blue-gray-50 text-center`;\r\n                                return (\r\n                                    <tr key={_id}>\r\n                                        <td className={className}>{name}</td>\r\n                                        <td className={className}>{email}</td>\r\n                                        <td className={className}>{role}</td>\r\n                                        <td className={className}>\r\n                                            <span className={`px-2 py-1 rounded text-xs font-semibold ${isActive ? \"bg-green-200 text-green-700\" : \"bg-red-200 text-red-700\"}`}>\r\n                                                {isActive ? \"Actif\" : \"Inactif\"}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className={className}>{new Date(createdAt).toLocaleDateString()}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    {/* Pagination */}\r\n                    <div className=\"flex justify-center items-center mt-6 gap-2\">\r\n                        <button\r\n                            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                            disabled={currentPage === 1}\r\n                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n                        >\r\n                            Précédent\r\n                        </button>\r\n                        <span className=\"text-sm font-medium\">\r\n                            Page {currentPage} / {totalPages}\r\n                        </span>\r\n                        <button\r\n                            onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n                            disabled={currentPage === totalPages}\r\n                            className=\"px-3 py-1 text-sm bg-gray-200 rounded disabled:opacity-50\"\r\n                        >\r\n                            Suivant\r\n                        </button>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <AddExpertModal\r\n    open={openModal}\r\n     handleClose={() => setOpenModal(false)}\r\n    onExpertAdded={fetchExperts}\r\n/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expert;\r\n"
        }
    ]
}
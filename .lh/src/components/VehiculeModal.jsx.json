{
    "sourceFile": "src/components/VehiculeModal.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749328345013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749328345013,
            "name": "Commit-0",
            "content": "import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Dialog, DialogHeader, DialogBody, DialogFooter, Button, Typography } from \"@material-tailwind/react\";\r\nimport { TrashIcon, PencilIcon } from \"@heroicons/react/24/outline\";\r\nimport AddVehiculeModal from \"./AddVehiculeModal\";\r\nimport client from \"../api/client\";\r\nimport { toast } from 'react-toastify';\r\nimport AuthContext from \"@/auth/context\";\r\n\r\nexport default function VehiculeModal({ open, onClose, userId, onVehicleAdded }) {\r\n    const { admin } = useContext(AuthContext);\r\n    const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [selectedVehicle, setSelectedVehicle] = useState(null);\r\n    const [vehicules, setVehicules] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const getAllVehicule = async () => {\r\n        if (!userId) return; // Skip fetch if userId is not available\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const res = await client.post(`/users/getAllVehicule`, { userId });\r\n            console.log(\"Fetched vehicles:\", res.data.result);\r\n            setVehicules(res.data.result || []);\r\n        } catch (error) {\r\n            console.error(\"Error fetching vehicles:\", error);\r\n            setError(\"Erreur lors du chargement des véhicules.\");\r\n            toast.error(\"Erreur lors du chargement des véhicules.\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n            });\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            getAllVehicule();\r\n        }\r\n    }, [open, userId]);\r\n\r\n    const handleOpenAddModal = () => setIsAddModalOpen(true);\r\n    const handleCloseAddModal = () => setIsAddModalOpen(false);\r\n\r\n    const handleOpenEditModal = (vehicle) => {\r\n        setSelectedVehicle(vehicle);\r\n        setIsEditModalOpen(true);\r\n    };\r\n    const handleCloseEditModal = () => {\r\n        setSelectedVehicle(null);\r\n        setIsEditModalOpen(false);\r\n    };\r\n\r\n    \r\n\r\n    const handleDeleteVehicle = async (vehicleId) => {\r\n        if (window.confirm(\"Voulez-vous vraiment supprimer ce véhicule ?\")) {\r\n            try {\r\n                const res = await client.post(`/users/deleteVehicule`, { vehiculeId: vehicleId, userId });\r\n                toast.success(\"Véhicule supprimé avec succès !\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                });\r\n                console.log(\"Delete response:\", res);\r\n                getAllVehicule(); \r\n                onVehicleAdded(); \r\n            } catch (err) {\r\n                console.error(\"Error deleting vehicle:\", err);\r\n                toast.error(\"Erreur lors de la suppression du véhicule.\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} handler={onClose} size=\"lg\">\r\n                <div className=\"flex items-center justify-between px-4 py-2\">\r\n                    <DialogHeader>Liste des Véhicules</DialogHeader>\r\n                       {admin.role === \"Admin\" && (\r\n                          <Button \r\n                        variant=\"gradient\" \r\n                        color=\"blue\" \r\n                        onClick={handleOpenAddModal}\r\n                        className=\"ml-4\"\r\n                    >\r\n                        Ajouter véhicule\r\n                    </Button>\r\n                       )\r\n                       }\r\n                  \r\n                </div>\r\n                <DialogBody divider className=\"max-h-[500px] overflow-y-auto\">\r\n                    {isLoading ? (\r\n                        <Typography>Chargement des véhicules...</Typography>\r\n                    ) : error ? (\r\n                        <Typography color=\"red\">{error}</Typography>\r\n                    ) : vehicules && vehicules.length > 0 ? (\r\n                        vehicules.map((v, idx) => (\r\n                            <div\r\n                                key={v._id || idx}\r\n                                className=\"border p-4 rounded-lg mb-4 bg-gray-50 shadow-sm flex justify-between items-start\"\r\n                            >\r\n                                <div>\r\n                                    <Typography variant=\"h6\">{v.brand || \"Marque inconnue\"}</Typography>\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm mt-2\">\r\n                                        <p><strong>Agence:</strong> {v.agence}</p>\r\n                                        <p><strong>Assuré:</strong> {v.assure}</p>\r\n                                        <p><strong>Type:</strong> {v.type}</p>\r\n                                        <p><strong>Matricule:</strong> {v.numeroMatricule}</p>\r\n                                        <p><strong>Série:</strong> {v.numeroSerie}</p>\r\n                                        <p><strong>Contrat:</strong> {v.numeroContrat}</p>\r\n                                        <p><strong>Début assurance:</strong> {new Date(v.insuranceStartDate).toLocaleDateString(\"fr-FR\")}</p>\r\n                                        <p><strong>Fin assurance:</strong> {new Date(v.insuranceEndDate).toLocaleDateString(\"fr-FR\")}</p>\r\n                                    </div>\r\n                                </div>\r\n                             {admin.role === \"Admin\" && (\r\n                                   <div className=\"flex gap-2\">\r\n                                    <button\r\n                                        onClick={() => handleOpenEditModal(v)}\r\n                                        className=\"text-blue-500 hover:text-blue-700\"\r\n                                        title=\"Modifier\"\r\n                                    >\r\n                                        <PencilIcon className=\"h-5 w-5\" />\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleDeleteVehicle(v._id)}\r\n                                        className=\"text-red-500 hover:text-red-700\"\r\n                                        title=\"Supprimer\"\r\n                                    >\r\n                                        <TrashIcon className=\"h-5 w-5\" />\r\n                                    </button>\r\n                                </div>\r\n\r\n                             )}\r\n                             \r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <Typography>Aucun véhicule associé.</Typography>\r\n                    )}\r\n                </DialogBody>\r\n                <DialogFooter>\r\n                    <Button variant=\"gradient\" color=\"red\" onClick={onClose}>\r\n                        Fermer\r\n                    </Button>\r\n                </DialogFooter>\r\n            </Dialog>\r\n            <AddVehiculeModal \r\n                open={isAddModalOpen} \r\n                onClose={handleCloseAddModal} \r\n                userId={userId} \r\n                onVehicleAdded={() => {\r\n                    getAllVehicule();\r\n                    onVehicleAdded();\r\n                }}\r\n                isEditMode={false}\r\n            />\r\n            <AddVehiculeModal \r\n                open={isEditModalOpen} \r\n                onClose={handleCloseEditModal} \r\n                userId={userId} \r\n                onVehicleAdded={() => {\r\n                    getAllVehicule();\r\n                    onVehicleAdded();\r\n                }}\r\n                isEditMode={true}\r\n                vehicleData={selectedVehicle}\r\n            />\r\n        </>\r\n    );\r\n}"
        }
    ]
}
{
    "sourceFile": "src/components/AjouterGestionnaire.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1748450338183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748450384441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,14 @@\n-import React from 'react'\r\n \r\n+import { useState } from \"react\";\r\n+import { Dialog, DialogHeader, DialogBody, DialogFooter, Input, Button } from \"@material-tailwind/react\";\r\n+\r\n+\r\n+import { toast, ToastContainer } from \"react-toastify\";\r\n+\r\n+import \"react-toastify/dist/ReactToastify.css\";\r\n+import apiClient from \"@/api/client\";\r\n+import { EyeIcon, EyeSlashIcon } from \"@heroicons/react/24/solid\";\r\n export default function  AjouterGestionnaire({ open, handleClose, onGestionnairedded }) {\r\n  const [form, setForm] = useState({ name: \"\", email: \"\", password: \"\" });\r\n     const [errors, setErrors] = useState({});\r\n     const [showPassword, setShowPassword] = useState(false);\r\n"
                },
                {
                    "date": 1749328484905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n \r\n \r\n \r\n         } catch (err) {\r\n+            console.log(err)\r\n \r\n             toast.error(\"Erreur lors de l'ajout.\");\r\n         } finally {\r\n             setLoading(false);\r\n"
                }
            ],
            "date": 1748450338183,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nexport default function  AjouterGestionnaire({ open, handleClose, onGestionnairedded }) {\r\n const [form, setForm] = useState({ name: \"\", email: \"\", password: \"\" });\r\n    const [errors, setErrors] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const validate = () => {\r\n        const newErrors = {};\r\n        if (!form.name) newErrors.name = \"Le nom est requis.\";\r\n        if (!form.email) newErrors.email = \"L'email est requis.\";\r\n        if (!form.password) newErrors.password = \"Le mot de passe est requis.\";\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setForm({ name: \"\", email: \"\", password: \"\" });\r\n        setErrors({});\r\n        setShowPassword(false);\r\n    };\r\n    const handleSubmit = async () => {\r\n        if (!validate()) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            const res = await apiClient.post(\"/admin/AjouterGestionnaire\", form);\r\n\r\n            if (res.status === 400) {\r\n                toast.error(res?.data?.message);\r\n            } else {\r\n\r\n                toast.success(\"Gestionnaire ajouté avec succès !\");\r\n                \r\n                onGestionnairedded(); // Pour rafraîchir la liste\r\n                setTimeout(() => {\r\n                    handleClose();       \r\n                    resetForm();        \r\n                }, 1000);\r\n            }\r\n\r\n\r\n\r\n        } catch (err) {\r\n\r\n            toast.error(\"Erreur lors de l'ajout.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n        setErrors({ ...errors, [e.target.name]: \"\" });\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} handler={() => {\r\n            resetForm();\r\n            handleClose();\r\n        }}>\r\n            <ToastContainer position='top-center' />\r\n            <DialogHeader>Ajouter un Gestionnaire</DialogHeader>\r\n            <DialogBody className=\"flex flex-col gap-4\">\r\n                <div>\r\n                    <Input\r\n                        label=\"Nom\"\r\n                        name=\"name\"\r\n                        value={form.name}\r\n                        onChange={handleChange}\r\n                        error={!!errors.name}\r\n                    />\r\n                    {errors.name && <p className=\"text-red-500 text-xs mt-1\">{errors.name}</p>}\r\n                </div>\r\n                <div>\r\n                    <Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={form.email}\r\n                        onChange={handleChange}\r\n                        error={!!errors.email}\r\n                    />\r\n                    {errors.email && <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>}\r\n                </div>\r\n                <div className=\"relative\">\r\n                    <Input\r\n                        label=\"Mot de passe\"\r\n                        name=\"password\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={form.password}\r\n                        onChange={handleChange}\r\n                        error={!!errors.password}\r\n                    />\r\n                    <div\r\n                        className=\"absolute right-3 top-2/4 -translate-y-1/2 cursor-pointer\"\r\n                        onClick={() => setShowPassword(!showPassword)}\r\n                    >\r\n                        {showPassword ? (\r\n                            <EyeSlashIcon className=\"h-5 w-5 text-gray-600\" />\r\n                        ) : (\r\n                            <EyeIcon className=\"h-5 w-5 text-gray-600\" />\r\n                        )}\r\n                    </div>\r\n                    {errors.password && <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>}\r\n                </div>\r\n            </DialogBody>\r\n            <DialogFooter>\r\n                <Button variant=\"text\" onClick={() => {\r\n                    resetForm();\r\n                    handleClose();\r\n                }} className=\"mr-2\">\r\n                    Annuler\r\n                </Button>\r\n                <Button onClick={handleSubmit} disabled={loading}>\r\n                    {loading ? \"Ajout...\" : \"Ajouter\"}\r\n                </Button>\r\n\r\n            </DialogFooter>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n"
        }
    ]
}